---
description: システムの要件定義書です。このファイルを逐一確認し、要件に沿った開発をしてください。
globs: 
alwaysApply: true
---
# システム要件定義書

## 1. システム概要
本システムは、[note.com](mdc:https:/note.com) において「AI」というハッシュタグが付けられた記事を、新着順にクロールし、記事のURLを一覧として取得するクローラーです。取得したデータをCSV形式でローカルに保存します。プロジェクト名はスネークケースとして **`note_ai_crawler`** とします。

- **システム名**：`note_ai_crawler`
- **目的**：note.com の新着AI関連記事URLの取得とCSV保存
- **使用言語**：Python 3.13
- **パッケージ管理**：uv および pyproject.toml
- **対応OS**：Mac
- **Gitリポジトリ**：[https://github.com/naoto714714/note_ai_crawler](mdc:https:/github.com/naoto714714/note_ai_crawler)

## 2. 機能要件
1. **記事クロール機能**  
   - ハッシュタグ「AI」を対象とし、以下のURL形式でnote.comをクロールする。  
     `https://note.com/hashtag/AI?f=new&paid_only=false`
   - 上記のURLにアクセスして、記事のURLを一覧で取得する。

2. **CSV出力機能**  
   - クロールして取得したデータ(記事のタイトル、URL、日付など必要情報)をCSV形式でローカルに保存する。  
   - CSVファイルの保存先を指定できること。

3. **再クロール機能（任意）**  
   - スクリプトを繰り返し実行しても、重複のないように制御できる仕組みを設ける（例：すでに取得したURLの除外など）。

## 3. 非機能要件
1. **Gitによるバージョン管理**  
   - 開発・運用はGitで管理し、GitHubリポジトリ（[https://github.com/naoto714714/note_ai_crawler](mdc:https:/github.com/naoto714714/note_ai_crawler)）でホスティングを行う。
2. **保守性**  
   - ソースコードはリファクタリングしやすい構造を維持する。
   - ディレクトリ構成や命名規則を明確にし、他の開発者が読みやすいコードとする。
3. **セキュリティ**  
   - 外部APIや外部サービスとの通信部分は例外処理を実装して、通信エラーなどに耐えられるようにする。
   - APIキーなどの秘匿情報（必要に応じて）はGit管理から除外する（.gitignore などの活用）。

## 4. 技術要件
1. **Pythonバージョン**  
   - Python 3.13 を利用する。
2. **パッケージ管理**  
   - [uv](mdc:https:/pypi.org/project/uv) を使用し、プロジェクトのPythonバージョンとパッケージを管理する。  
   - `pyproject.toml` で依存パッケージを管理する。
3. **ライブラリ**  
   - Webスクレイピングに必要なライブラリ（例：requests, BeautifulSoup など）を利用する。
   - CSV出力に必要な標準ライブラリ（csvなど）を利用する。
4. **動作環境**  
   - MacOS で動作検証を行う。

## 5. ディレクトリ構成図

以下は想定されるディレクトリ構成の一例です。

```
note_ai_crawler/
├── .gitignore
├── pyproject.toml
├── README.md
├── data/
│   └── articles.csv       # クロール結果を保存するCSVファイル
├── src/
│   ├── crawler.py         # クロール処理メインロジック
│   └── utils.py           # ユーティリティ関数（CSV出力処理など）
└── tests/
    └── test_crawler.py    # テストコード
```

- **`data/`**  
  - クロール結果のCSVファイルを保管するディレクトリ。
- **`src/`**  
  - 本システムの中核となるクローラーやユーティリティを格納。
- **`tests/`**  
  - テストコードを格納。単体テスト、統合テストなどの実装を行う。
  